{
  "hash": "a28595f03b2b8b62cd038841df94f6bd",
  "result": {
    "markdown": "---\ntitle: \"Analysis\"\neditor: visual\nbibliography: bibliography.bib\n---\n\n\nLego sets all come with different themes. Each theme serves the purpose of being created to entertain a specific audience. The purpose of this analysis is to look at the difference in Lego set sizes, quantified by the number of Lego \"bricks\", or pieces, according to the theme. This can give us a deeper insight into how Lego produces their sets, who their inteded audience is, and how many sets of that specific theme are produces. With this analysis, I aim to answer the question; Does a Lego theme affect a set's size?\n\nThe intended audience for this data analysis are all Lego enthusiasts, and those interested in learning about the way that the Lego company thinks about the size of their sets depending on the theme. The original data came from the tidytuesday library, and it was published on September 6, 2022 (https://github.com/rfordatascience/tidytuesday/tree/master/data/2022/2022-09-06)[@tidytuesday]. Tidytuesday is a wonderful data source which allows users to practice their data science skils [@shrestha2021remote]. The data dictionary is included in the github repository linked above.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(ggplot2)\nlibrary(dplyr)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n\nAttaching package: 'dplyr'\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nThe following objects are masked from 'package:stats':\n\n    filter, lag\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nThe following objects are masked from 'package:base':\n\n    intersect, setdiff, setequal, union\n```\n:::\n\n```{.r .cell-code}\nlibrary(here)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nhere() starts at /Users/dlopez31/Desktop/biostat840-intro-alejandro-lopez\n```\n:::\n\n```{.r .cell-code}\nlibrary(forcats)\nlibrary(data.table)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n\nAttaching package: 'data.table'\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nThe following objects are masked from 'package:dplyr':\n\n    between, first, last\n```\n:::\n\n```{.r .cell-code}\nlibrary(patchwork)\nlibrary(stringr)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nsets <- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2022/2022-09-06/sets.csv.gz')\nthemes <- readr::read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2022/2022-09-06/themes.csv.gz')\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nsaveRDS(sets, file = here(\"data\",\"sets.RDS\"))\nsaveRDS(themes, file = here(\"data\",\"themes.RDS\"))\n```\n:::\n\n\nFirst, we are interested in joining the \"sets\" dataset containing all Lego sets created since 1965, with the \"themes\" dataset, containing the themes associated with the Lego sets.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsets <- readRDS(here(\"data\",\"sets.RDS\"))\nthemes <- readRDS(here(\"data\",\"themes.RDS\"))\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nsets <- sets %>% select('set_num', 'name', 'year', 'theme_id', 'num_parts')\ncolnames(themes) <- c('theme_id', 'theme_name', 'parent_id')\nthemes <- themes %>% select('theme_id', 'theme_name')\nwith_theme <- inner_join(sets, themes, by='theme_id')\n```\n:::\n\n\nNow our \"with_theme\" dataset contains the sets with the appropriate themes.\n\nFirst, we are going to try to examine the relationship between the number of sets that is produced per theme and the number of pieces total that each theme has. This can give us an insight into whether specific theme production is focused on the number of sets or size of the set. We will obtain the top 12 and compare them. We will only focus on the last 25 years.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmost_pieces <- with_theme %>% filter(year >= 1997, num_parts > 10) %>% group_by(theme_name) %>% summarize(sum=sum(num_parts)) %>% arrange(-sum) %>% head(12)\nmost_pieces\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 12 × 2\n   theme_name                   sum\n   <chr>                      <dbl>\n 1 Star Wars                 230167\n 2 Technic                   205635\n 3 Ninjago                   101324\n 4 Friends                   101174\n 5 Ultimate Collector Series  92432\n 6 Creator Expert             79053\n 7 Icons                      71578\n 8 Harry Potter               68250\n 9 Creator 3-in-1             68069\n10 LEGO Ideas and CUUSOO      57549\n11 City                       48112\n12 LEGO Art                   48067\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nmost_popular_pieces <- unlist(most_pieces[['theme_name']])\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nmost_sets <- with_theme %>% filter(year>=1997, num_parts > 12) %>% group_by(theme_name) %>% summarize(n=n()) %>% arrange(-n) %>% head(12)\nmost_sets\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 12 × 2\n   theme_name         n\n   <chr>          <int>\n 1 Star Wars        734\n 2 Friends          487\n 3 Technic          471\n 4 Ninjago          359\n 5 Bionicle         320\n 6 Gear             248\n 7 Basic Set        196\n 8 Creator 3-in-1   193\n 9 City             192\n10 Creator          186\n11 Racers           183\n12 Town             167\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nx <- seq(1, 12)\nmost_pieces$ranking <- x \nmost_sets$ranking <- x\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nranked <- inner_join(most_pieces, most_sets, 'ranking') %>% select('ranking', 'theme_name.x', 'theme_name.y') %>% setnames(new=c('ranking', 'theme_name_pieces', 'theme_name_sets'), old=c('ranking', 'theme_name.x', 'theme_name.y'))\nranked\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 12 × 3\n   ranking theme_name_pieces         theme_name_sets\n     <int> <chr>                     <chr>          \n 1       1 Star Wars                 Star Wars      \n 2       2 Technic                   Friends        \n 3       3 Ninjago                   Technic        \n 4       4 Friends                   Ninjago        \n 5       5 Ultimate Collector Series Bionicle       \n 6       6 Creator Expert            Gear           \n 7       7 Icons                     Basic Set      \n 8       8 Harry Potter              Creator 3-in-1 \n 9       9 Creator 3-in-1            City           \n10      10 LEGO Ideas and CUUSOO     Creator        \n11      11 City                      Racers         \n12      12 LEGO Art                  Town           \n```\n:::\n:::\n\n\nWe see from the table above that Star Wars reigns supreme, with both the highest number of pieces and also the most number of sets produced. We can also see that there are some differences in the sets included in each list. A couple that I would like to point out that we will come back to later are the Harry Potter sets, only included in the list with the most number of pieces and the LEGO Ideas and CUUSOO set, also only included in the the list with the most number of pieces.\n\nWe will analyse how some of these numbers have changed over the years. On the graphs below, we see that the both the average number of pieces per set, as well as the total number of sets produced have increased in the last 25 years. The package ggplot2 was used for these visualizations [@wickham2016package].\n\n\n::: {.cell}\n\n```{.r .cell-code}\nwith_theme %>% filter(year >= 1997, num_parts > 10) %>% group_by(year) %>% summarize(avg = mean(num_parts)) %>% ggplot(aes(year, avg)) + geom_line() + labs(x='Year', y='Average Number of Pieces', title='Average Number of Pieces in Last 25 Years', subtitle=\"Average number of pieces has increased in the last 25 years.\")\n```\n\n::: {.cell-output-display}\n![](analysis_files/figure-html/unnamed-chunk-11-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nwith_theme %>% filter(year >= 1997, num_parts > 10) %>% group_by(year) %>% summarize(n = n()) %>% ggplot(aes(year, n)) + geom_line() + labs(x='Year', y='Number of Sets', title='Number of Sets in Last 25 Years', subtitle=\"Number of sets has increased in the last 25 years.\")\n```\n\n::: {.cell-output-display}\n![](analysis_files/figure-html/unnamed-chunk-12-1.png){width=672}\n:::\n:::\n\n\nUsing the list of themes that have the most number of pieces, now we will analyze how the number of pieces has changed over the years for each theme. We will also look at how the number of total sets produced per theme has varied. We will focus on the last 25 years only.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntop <- with_theme %>% filter(theme_name %in% most_popular_pieces) %>% select(set_num, year, num_parts, theme_name) %>% filter(num_parts > 10) %>% group_by(theme_name, year) %>% summarize(sum = sum(num_parts), n=n()) %>% filter(year >= 1997) %>% ungroup()\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n`summarise()` has grouped output by 'theme_name'. You can override using the\n`.groups` argument.\n```\n:::\n\n```{.r .cell-code}\ntop_no_zero <- top\ntop\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 183 × 4\n   theme_name  year   sum     n\n   <chr>      <dbl> <dbl> <int>\n 1 City        2005   314     2\n 2 City        2006   688     3\n 3 City        2007   234     1\n 4 City        2008   197     1\n 5 City        2009   599     4\n 6 City        2010   656     2\n 7 City        2011  1198     6\n 8 City        2012   248     1\n 9 City        2013  1188     5\n10 City        2014  1360     8\n# … with 173 more rows\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nfor(x in most_popular_pieces){\n  for(y in 1997:2022){\n    if(nrow(filter(top, theme_name==x, year==y)) == 0){\n      top <- top %>% add_row(theme_name=x, year=y, sum=0, n=0)\n    }\n  }\n}\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ntop %>% ggplot(aes(year, sum)) + geom_line() + facet_wrap('theme_name') + labs(x='Year', y='Total Number of Pieces', title='Total Number of Pieces per Theme in the Last 25 Years', subtitle=\"Number of pieces has increased in the last 25 years for most themes.\")\n```\n\n::: {.cell-output-display}\n![](analysis_files/figure-html/unnamed-chunk-15-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ntop %>% ggplot(aes(year, n)) + geom_line() + facet_wrap('theme_name') + labs(x='Year', y='Total Number of Sets', title='Total Number of Sets per Theme in the Last 25 Years', subtitle=\"Number of sets has increased in the last 25 years for a lot of themes, but many themes did not.\")\n```\n\n::: {.cell-output-display}\n![](analysis_files/figure-html/unnamed-chunk-16-1.png){width=672}\n:::\n:::\n\n\nOn the graphs above, we see how the number of pieces per theme has changed in graph 1, as well as how the number of sets produced per theme has changed in graph 2, both over the last 25 years. In graph 1, We see in general that the total number of pieces per year has increased per theme. In graph 2, we see that some themes have largely increased the number of sets made, we see this for \"Friends\", \"City\", \"Star Wars\", \"Ninjago\" and \"Harry Potter\". On the other hand, \"LEGO Ideas and CUUSOO\" has increased, but the number of sets produced per year is still very low. This is in contrast to its number of pieces, which seems to have increased to upwards of 10000 by 2021.\n\nIn the plot below, we examine the distribution of the total number of sets produced per theme. We see that these themes all have varying distributions. The mean number of sets produced per theme ranges from 1 to upwards of 40. The \"Friends\" theme has the highest average number of sets made and it was also in the top for the most number of total pieces.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntop_no_zero %>% ggplot(aes(theme_name, n)) + coord_flip() + geom_boxplot() + labs(x='Number of Sets', y='Theme Name', title='Distribution of number of Lego sets per theme', subtitle=\"Distributions of Lego sets vary widely by theme. Some have an average \\nnumber of sets upwards of 40, while the majority has an average number \\nof sets below 15.\")\n```\n\n::: {.cell-output-display}\n![](analysis_files/figure-html/unnamed-chunk-17-1.png){width=672}\n:::\n:::\n\n\nWe will now focus on three specific themes, the \"Friends\" theme, which has a large number of sets produced, as well as pieces, along with \"Harry Potter\", a very iconic theme, which was in the list for highest number of pieces, but not for highest number of sets produced, and on \"LEGO Ideas and CUUSOO\" which was also in the list for highest number of pieces, but lagged behind on the number of sets produced.\n\nFirst, we look at the number of sets produced every year for those three themes. We see that \"Friends\" is the highest, even though it only started in 2012. \"Harry Potter\" did not make any sets from 2012-2017. This is probably because the last entry in the movie franchise premiered in 2011 and the Lego sets only got revitalized for the 20th anniversary of the first book coming out. \"LEGO Ideas and CUUSOO\" has been slowly increasing since it started in 2011. \n\n\n::: {.cell}\n\n```{.r .cell-code}\nharry_potter <- with_theme %>% filter(theme_name == 'Harry Potter', num_parts > 10)\nlego_ideas <- with_theme %>% filter(theme_name == 'LEGO Ideas and CUUSOO', num_parts > 10)\nfriends <- with_theme %>% filter(theme_name == 'Friends', num_parts > 10)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nsets_of_interest <- rbind(harry_potter, lego_ideas, friends)\nsets_of_interest %>% ggplot(aes(x=year, fill=theme_name)) + geom_bar() + labs(x='Year', y='Number of Sets', title='Number of Sets for Select Themes in the Last 25 Years', subtitle=\"Friends has the highest number of sets produced per year. Harry Potter was the first theme to \\nstart in 2001, but had a dry spell in the late 2000's.\") + guides(fill=guide_legend(title=\"Theme Name\"))\n```\n\n::: {.cell-output-display}\n![](analysis_files/figure-html/unnamed-chunk-19-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nfriends_mean <- round(mean(friends$num_parts))\nfriends_max <- max(friends$num_parts)\nfriends_min <- min(friends$num_parts)\nharry_mean <- round(mean(harry_potter$num_parts))\nharry_min <- min(harry_potter$num_parts)\nharry_max <- max(harry_potter$num_parts)\nlego_mean <- round(mean(lego_ideas$num_parts))\nlego_max <- max(lego_ideas$num_parts)\nlego_min <- min(lego_ideas$num_parts)\n```\n:::\n\n\nIn the graphs below, we see the distribution for the number of pieces for the three themes we had chosen. We see that \"Friends\" has the lowest distribution, followed by \"Harry Potter\", which also has some outliers, and finally, \"LEGO Ideas and CUUSOO\", with the highest distribution.  \n\n\n::: {.cell .column-margin}\n\n```{.r .cell-code}\nknitr::kable(tibble('theme'=c('LEGO Ideas', 'Harry Potter', 'Friends'), 'min'=c(lego_min, harry_min, friends_min), 'max'=c(lego_max, harry_max, friends_max), 'avg'=c(lego_mean, harry_mean, friends_mean)))\n```\n\n::: {.cell-output-display}\n|theme        | min|  max|  avg|\n|:------------|---:|----:|----:|\n|LEGO Ideas   | 154| 3955| 1151|\n|Harry Potter |  16| 6020|  529|\n|Friends      |  11| 1682|  207|\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nwith_theme %>% filter(num_parts > 10, theme_name %in% c('Friends', 'Harry Potter', 'LEGO Ideas and CUUSOO')) %>% ggplot(aes(x=theme_name, y=num_parts)) + coord_flip() + geom_boxplot() + labs(x='Number of Parts per Set', y='Theme Name', title='Distribution of Number of Parts per Set for Select Themes', subtitle=\"Friends has most narrow distribution, followed by Harry Potter. Harry Potter \\nhas very large outliers.\")\n```\n\n::: {.cell-output-display}\n![](analysis_files/figure-html/unnamed-chunk-22-1.png){width=672}\n:::\n:::\n\n\nWe can also see from the table below that the min for \"LEGO Ideas and CUUSOO\" is magnitudes higher than the other mins. The average for \"LEGO Ideas and CUUSOO\" is also higher than the others. \n\n::: {.callout-note}\nThe max is the highest for \"Harry Potter\", with a whopping 6020 pieces per set and a retail price of $469.99. \n:::\n\n\n::: {.cell .column-margin}\n\n```{.r .cell-code}\ntop_legos_harry <- with_theme %>% filter(theme_name %in% c('Harry Potter')) %>% arrange(-num_parts) %>% head(3) %>% select(c('name', 'num_parts'))\nknitr::kable(top_legos_harry)\n```\n\n::: {.cell-output-display}\n|name                                   | num_parts|\n|:--------------------------------------|---------:|\n|Hogwarts Castle                        |      6020|\n|Diagon Alley                           |      5548|\n|Hogwarts Express - Collectors’ Edition |      5150|\n:::\n:::\n\n::: {.cell .column-margin}\n\n```{.r .cell-code}\ntop_legos_ideas <- with_theme %>% filter(theme_name %in% c('LEGO Ideas and CUUSOO')) %>% arrange(-num_parts) %>% head(3) %>% select(c('name', 'num_parts'))\nknitr::kable(top_legos_ideas)\n```\n\n::: {.cell-output-display}\n|name        | num_parts|\n|:-----------|---------:|\n|Home Alone  |      3955|\n|Grand Piano |      3662|\n|Tree House  |      3037|\n:::\n:::\n\n::: {.cell .column-margin}\n\n```{.r .cell-code}\ntop_legos_friends <- with_theme %>% filter(theme_name %in% c('Friends')) %>% arrange(-num_parts) %>% head(3) %>% select(c('name', 'num_parts'))\nknitr::kable(top_legos_friends)\n```\n\n::: {.cell-output-display}\n|name                       | num_parts|\n|:--------------------------|---------:|\n|Main Street Building       |      1682|\n|Heartlake Grand Hotel      |      1572|\n|Heartlake City Grand Hotel |      1309|\n:::\n:::\n\n\nFrom the analysis of this LEGO dataset, we can get a sense of how Lego chooses what sizes the sets for each theme get. The them \"LEGO Ideas and CUUSOO\" is a theme made up mostly of collectible sets, sets which are for decoration and not really used to play with. This theme is marketed as being for \"experienced users\" or adults. The sets with the most number of pieces for this theme are a replica of the Home Alone house, a replica of a grand piano, and a tree house. These are all collectible, with only a small number of minifigures or no minifigures at all. \n\nThe same can be said for \"Harry Potter\", as their sets with the most number of pieces are collectibles. They are the Hogwarts castle, Diagon Alley, and the Hogwarts Express, all very iconic landmarks of the movies. These are not playable sets, and are meant to be displays or collectibles. The difference is that \"Harry Potter\" also contains sets with small numbers of pieces, which can be used for playing. \n\nThe \"Friends\" theme is marketed for kids, specifically young girls.These sets are meant to be played with, which explains why so many sets are made and why that theme has so many pieces. This themes is also meant to fill a vacuum, as before, there really weren't any Lego themes that were specifically targeted for young girls. If a girl wanted to play with Legos, she would have to choose a set that would typically be associated with boys like those of \"City\" which usually have firefighters, cops, astronauts, etc. This idea worked out for the company, as the theme has only been out for roughly 11 years, but it is in the top number of sets made and also total number of pieces. \n\n::: {.callout-caution collapse=\"true\"}\n## Things to keep in mind regarding the analysis \n\nIf there was data with the sales price for each set, we would be able to get a lot more information on how exactly it is that the Lego company chooses what sets are made and how big they are. There are many other factors that contribute to how many pieces each set has and how many sets are made per theme, such as minifigure inclusion, rarity of pieces, etc. \n:::\n\n::: {layout=\"[[1], [1, 1], [1, 1]]\"}\n![Diagon Alley](diagon_alley)\n\n![Hogwarts Castle](castle)\n\n![Grand Piano](grand_piano)\n\n![Hogwarts Express](hogwarts_express)\n\n![Home Alone](home_alone)\n\n![Main Street Building](main_street_building)\n\n![Heartlake Grand Hotel](heartlake_hotel)\n:::\n\n",
    "supporting": [
      "analysis_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}